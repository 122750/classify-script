const twetchKAbi = require('./twetchK-abi');const Transaction = require('bsv/lib/transaction');const BSVABI = require('@twetchK/bsvabi/dist/bsvabi.min.js'); const isTwetchKOut = (script) => {	const actions = Object.keys(twetchKAbi.actions);	let instance;	const tx = new Transaction();	tx.addOutput(new Transaction.Output({ script: script.toString(), satoshis: 0 }));	const rawtx = tx.toString(); 	for (let action of actions) {		try {			instance = new BSVABI(twetchKAbi).action(action).fromTx(rawtx);			break;		} catch (e) {}	} 	if (instance && instance.args && instance.args[1] && instance.args[1].includes('$osg')) {		return 'retrotwetchK';	} 	return (		!!instance && instance.actionName && 'TwetchK ' + instance.actionName.split('/')[1].split('@')[0]	);}; module.exports = isTwetchKOut;
